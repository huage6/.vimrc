" ###############################

" Plug {{{1
call plug#begin('~/.vim/plugged')
	Plug 'scrooloose/nerdtree'
	Plug 'jistr/vim-nerdtree-tabs'
	Plug 'Xuyuanp/nerdtree-git-plugin'
	Plug 'majutsushi/tagbar'
	Plug 'scrooloose/nerdcommenter'
	Plug 'vim-syntastic/syntastic'
	Plug 'tmhedberg/SimpylFold'	
	Plug 'jiangmiao/auto-pairs'
	Plug 'jnurmine/Zenburn'
	Plug 'altercation/vim-colors-solarized'
	Plug 'tell-k/vim-autopep8'
	Plug 'SirVer/ultisnips'
	Plug 'honza/vim-snippets'
	Plug 'neoclide/coc.nvim', {'branch': 'release'}
	" Plug 'python-mode/python-mode', { 'for': 'python', 'branch': 'develop' }
	Plug 'mhinz/vim-startify'
	Plug 'vim-airline/vim-airline'
	Plug 'vim-airline/vim-airline-themes'
	Plug 'Yggdroot/indentLine'
	Plug 'kien/ctrlp.vim'
	Plug 'easymotion/vim-easymotion'
	Plug 'tpope/vim-surround'
call plug#end()
" }}}1

" Option {{{1
set nocompatible                            " 去除vi的一致性
syntax enable                               " 语法高亮
set showmode                                " 在底部显示当前模式
set showcmd                                 " 在底部显示输入的命令
set mouse=a                                 " 鼠标可用
set number                                  " 显示行号
set norelativenumber                        " 高亮显示当前行行号
filetype plugin indent on                   " 自动识别文件类型，用文件类型plugin脚本，使用缩进定义文件

set autoindent                              " 自动对齐
set smartindent                             " 智能缩进

set tabstop=4
set shiftwidth=4
set expandtab
set smarttab

set autoread                                " 文件自动检测外部更改
set cindent                                 " c文件自动缩进

set nocursorline                            " 高亮显示当前行

set nowrap                                  " 自动折行
set linebreak                               " 不会在单词内部折行

set noruler                                 " 显示标尺，就是在右下角显示光标位置

set shortmess=atI                           " 启动时隐去援助提示

set laststatus=2                            " 启动显示状态行
set termguicolors                           "24bit colors

" 浅色显示当前行
"autocmd InsertLeave * se nocul 
"autocmd InsertEnter * se cul

set term=xterm-256color

set showmatch                               " 括号匹配
set matchtime=2                             " 短暂跳转到匹配括号的时间
set hlsearch                                " 高亮查找匹配
set incsearch                               " 即时搜索
set ignorecase                              " 忽略大小写

set nobackup                                " 不需要备份
set noswapfile                              " 不创建交换文件
set autochdir                               " 自动切换工作目录
set noerrorbells                            " 出错时，不要响声
set novisualbell                            " 出错时，不要闪烁
set confirm                                 " 没有保存或文件只读时弹出确认
set autoread                                " 打开文件监视
set sidescroll=10                           " 水平滚动时，光标距离行首或行尾的位置
set whichwrap=b,s,<,>,[,]                   " 跨行移动
set clipboard=unnamed                       " 系统剪贴板

set foldenable                              " 自动折叠
set foldmethod=marker

" 代码折叠设置空格键
nnoremap <space> za 

" 窗口分割使用命令
set splitbelow
set splitright
" }}}1

" Mapping {{{1

let mapleader=','
let g:mapleader=','

nnoremap \ ,

inoremap <leader>w <Esc>:w<cr>
noremap <leader>w :w<cr>

inoremap jj <Esc>

nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l

" nnoremap <left> <C-w>>
" nnoremap <right> <C-w><
" nnoremap <up> <C-w>-
" nnoremap <down> <C-w>+

nnoremap <silent> [b :bprevious<cr>
nnoremap <silent> [n :bnext<cr>

nnoremap <leader>h :helpgrep<space>

" 映射全选+复制 ctrl+a
map <C-A> ggVGY
map! <C-A> <Esc>ggVGY
map <F12> gg=G
" 选中状态下 Ctrl+c 复制
vmap <C-c> "+y

xnoremap < <gv
xnoremap > >gv
" 去除空行
nnoremap <F12> :g/^\s*$/d<cr>

" }}}1

" Autocmd {{{1
 " {{{2
    " 记住上次光标位置
    if has("autocmd")
    	au BufReadPost * if line("'\"") > 0 && line("'\"") <= line("$")
	    	\| exe "normal g'\"" | endif
    endif	

" }}}1

" plugin {{{1
  " plugin: ultisnips {{{2
    " ultisnips
    " ctrl+j ctrl+k
    "let g:UltiSnipsExpandTrigger="<tab>"
    "let g:UltiSnipsJumpForwardTrigger="<c-b>"
    "let g:UltiSnipsJumpBackwardTrigger="<c-z>"

  " plugin: easymotion {{{2

    nmap ss <Plug>(easymotion-s2)


  " plugin: nerdtree {{{2
    " 映射键盘F2开启nerdtree
    map <F2> :NERDTreeToggle<CR>

    " 显示bookmark
    let NERDTreeShowBookmarks = 1

    " 设置自动开启NERDTree
    " autocmd vimenter * NERDTree

    " 隐藏目录树中的.pyc文件
    let NERDTreeIgnore=['\.pyc$', '\~$']

  " plugin: ctrlp {{{2
    let g:ctrlp_map = '<c-p>'
    let g:ctrlp_cmd = 'CtrlP'
    let g:ctrlp_switch_buffer = 'Et'
    let g:ctrlp_cache_dir = $HOME.'/.cache/ctrlp'

  " plugin: tagbar {{{2

    " 映射键盘F9开启tagbar
    nnoremap <F9> :TagbarToggle<CR>

  " plugin: nerdtree-tabs {{{2

    "rvim-nerdtree-tabs)

  " plugin: nerdcommenter {{{2

    " 一键注释和反注释
    " [count]<Leader>cc 光标以下count行逐行添加注释(7,cc)
    " [count]<Leader>cu 光标以下count行逐行取消注释(7,cu)
    " [count]<Leader>cm 光标以下count行尝试添加块注释(7,cm)
    " <Leader>cA 在行尾插入 /* */,并且进入插入模式。 这个命令方便写注释.
    " 注：count参数可选，无则默认为选中行或当前行
    " 让注释符与语句之间留一个空格
    let NERDSpaceDelims=1
    " 多行注释时样子更好看
    let NERDCompactSexyComs=1

    " map<f4> <leader>ci <CR>

  " plugin: autopep8 {{{2

    " 自动格式化工具可以设置快捷键F8代替:Autopep8:
    autocmd FileType python noremap <buffer> <F8> :call Autopep8()<CR>
    " 最大允许行长度
    let g:autopep8_max_line_length=79
    " 每个缩进级别的空格数
    let g:autopep8_indent_size=4
    " 禁用显示差异窗口
    let g:autopep8_disable_show_diff = 1
    " 每次保存文件时自动格式化
    " let g:autopep8_on_save = 1
    " 不要修复这些错误/警告
    "let g:autopep8_ignore="E501,W293"
    "let g:autopep8_select="E501,W293"


  " plugin: solarized {{{2

     if has('gui_running')
        set background=dark
        colorscheme solarized
     else
         colorscheme zenburn
     endif
     call togglebg#map("<F5>")
     let g:solarized_termcolors=256


  " plugin: indentLine {{{2

    " 高亮显示行不必要的空白字符
      highlight Whitespace ctermbg=red guibg=red
      au BufRead,BufNewFile *.py,*.pyw,*.c,*.h match Whitespace /\s\+$\ \+/

    " 缩进指示线
    let g:indentLine_char='┆'
    let g:indentLine_enable=1

    "一键运行代码
    let g:pymode_python = 'python3'
" }}}1

" function {{{1
 " {{{2
    " 自动增加头注释
    function! HeaderPython()
      call setline(1, "#!/usr/bin/env python")
      call append(1, "#-*- coding:utf8 -*-")
      call append(2, "# Power by huage" . strftime('%Y-%m-%d %T', localtime()))
      normal G
      normal o
      normal o
    endf
    autocmd bufnewfile *.py call HeaderPython()

" }}}1

